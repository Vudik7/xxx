import cv2
import numpy as np
import matplotlib.pyplot as plt
import glob
import os

def sauvola_threshold(image, window_size=5, k=0.2, r=128):
    """
    –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –±–∏–Ω–∞—Ä–∏–∑–∞—Ü–∏—è –°–∞—É–≤–æ–ª—ã.
    
    :param image: –ü–æ–ª—É—Ç–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (grayscale)
    :param window_size: –†–∞–∑–º–µ—Ä –æ–∫–Ω–∞ (–Ω–µ—á–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 5)
    :param k: –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∫–∏ (–æ–±—ã—á–Ω–æ –æ—Ç 0.2 –¥–æ 0.5)
    :param r: –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –¥–∏–∞–ø–∞–∑–æ–Ω —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 128)
    :return: –ë–∏–Ω–∞—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    """
    img = image.astype(np.float32)

    # –°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –æ–∫–Ω–µ 5x5
    mean = cv2.boxFilter(img, ddepth=-1, ksize=(window_size, window_size))
    
    # –°—Ä–µ–¥–Ω–∏–π –∫–≤–∞–¥—Ä–∞—Ç (–¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è)
    mean_sq = cv2.boxFilter(img**2, ddepth=-1, ksize=(window_size, window_size))
    
    # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ
    std_dev = np.sqrt(mean_sq - mean**2)
    
    # –í—ã—á–∏—Å–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ–≥
    threshold = mean * (1 + k * ((std_dev / r) - 1))
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –±–∏–Ω–∞—Ä–∏–∑–∞—Ü–∏—é
    binary_image = (img > threshold).astype(np.uint8) * 255
    
    return binary_image

# üìå –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Ç–µ—Å—Ç–∞
image_paths = glob.glob("binarization/*.png")  # –ü–∞–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
images = [cv2.imread(img, cv2.IMREAD_GRAYSCALE) for img in image_paths]

# üìå –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
output_dir = "binarization/processed"
if not os.path.exists(output_dir):
    os.makedirs(output_dir)

# üìå –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –≤—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
plt.figure(figsize=(12, 6))

for i, img in enumerate(images):
    binary_img = sauvola_threshold(img, window_size=5)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    output_path = os.path.join(output_dir, f"processed_{i+1}.png")
    cv2.imwrite(output_path, binary_img)

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    plt.subplot(len(images), 2, 2*i + 1)
    plt.imshow(img, cmap='gray')
    plt.title(f"–û—Ä–∏–≥–∏–Ω–∞–ª {i+1}")
    plt.axis("off")

    plt.subplot(len(images), 2, 2*i + 2)
    plt.imshow(binary_img, cmap='gray')
    plt.title(f"–ë–∏–Ω–∞—Ä–∏–∑–∞—Ü–∏—è –°–∞—É–≤–æ–ª—ã {i+1}")
    plt.axis("off")

plt.tight_layout()
plt.show()